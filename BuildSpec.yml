version: 0.2

phases:
  pre_build:
    commands:
      - mkdir localstaging
      - mkdir localstaging/PROD
      - mkdir localstaging/QA
      - mkdir localstaging/Lambda
      - mkdir localstaging/PROD/publish
      - mkdir localstaging/QA/publish
      - mkdir localstaging/PROD/.ebextensions
      - mkdir localstaging/QA/.ebextensions
  build:
    commands:
      - dotnet restore
      - dotnet build -c Release
      - dotnet publish src/act.core.etl.lambda/act.core.etl.lambda.csproj -r linux-x64 -c Release --version-suffix $CODEBUILD_RESOLVED_SOURCE_VERSION
      - dotnet publish src/act.core.web/act.core.web.csproj -c Release --version-suffix $CODEBUILD_RESOLVED_SOURCE_VERSION
  post_build:
    commands:
      - cp -r bin/Release/netcoreapp2.1/linux-x64/publish/* localstaging/Lambda
      - cp AWS/Lambda/*.json localstaging/Lambda
      - cp AWS/Docker/Extensions/*.config localstaging/PROD/.ebextensions
      - cp AWS/Docker/Extensions/*.config localstaging/QA/.ebextensions
      - cp AWS/Docker/Extensions/Prod/*.config localstaging/PROD/.ebextensions
      - cp AWS/Docker/Extensions/QA/*.config localstaging/QA/.ebextensions
      - cp AWS/Docker/*.json localstaging/PROD
      - cp AWS/Docker/Dockerfile localstaging/PROD
      - cp AWS/Docker/*.json localstaging/QA
      - cp AWS/Docker/Dockerfile localstaging/PROD
      - cp -r bin/Release/netcoreapp2.1/publish localstaging/PROD/
      - cp -r bin/Release/netcoreapp2.1/publish localstaging/QA/
      - cd localstaging/Lambda
      - zip -v -r ../Lambda.zip .
      - cd ../PROD
      - zip -v -r ../BeanstalkProd.zip .
      - cd ../QA
      - zip -v -r ../BeanstalkQA.zip .
artifacts:
  files:
    - localstaging/BeanstalkQA.zip
    - localstaging/BeanstalkProd.zip
    - localstaging/Lambda.zip
